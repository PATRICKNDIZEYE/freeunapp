// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(cuid())
  email             String   @unique
  name              String?
  password          String?
  emailVerified     DateTime?
  role              UserRole @default(STUDENT)
  approved          Boolean  @default(false)
  profileComplete   Boolean  @default(false)
  preferences       Json?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Student relations
  savedScholarships SavedScholarship[]
  notifications     Notification[]

  // Admin relations
  scholarships      Scholarship[]
  resources         Resource[]

  // NextAuth relations
  accounts          Account[]
  sessions          Session[]

  @@map("users")
}

model Scholarship {
  id                  String            @id @default(cuid())
  title               String
  description         String
  detailedDescription String?
  logoUrl             String?
  referenceUrl        String?
  eligibilityCriteria String?
  applicationProcess  String?
  qualificationBasis  String?
  awardsAvailable     Int?
  amount              String
  amountType          AmountType        @default(PARTIAL)
  category            Category
  degreeLevel         DegreeLevel
  deadline            DateTime
  contactInfo         String?
  status              ScholarshipStatus @default(ACTIVE)
  approvalStatus      ApprovalStatus    @default(PENDING)
  views               Int               @default(0)
  adminId             String
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt

  admin             User               @relation(fields: [adminId], references: [id], onDelete: Cascade)
  savedBy           SavedScholarship[]
  applications      Application[]

  @@map("scholarships")
}

model SavedScholarship {
  id            String   @id @default(cuid())
  userId        String
  scholarshipId String
  savedAt       DateTime @default(now())

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  scholarship Scholarship @relation(fields: [scholarshipId], references: [id], onDelete: Cascade)

  @@unique([userId, scholarshipId])
  @@map("saved_scholarships")
}

model Application {
  id            String            @id @default(cuid())
  name          String
  email         String
  phone         String?
  message       String?
  scholarshipId String
  appliedAt     DateTime          @default(now())
  status        ApplicationStatus @default(APPLIED)
  
  // Personal Information
  dateOfBirth        DateTime?
  nationality        String?
  
  // Academic Information
  currentInstitution String?
  fieldOfStudy       String?
  currentYear        String?
  gpa                Float?
  expectedGraduation DateTime?
  
  // Intended Program
  intendedUniversity String?
  intendedProgram    String?
  intendedCountry    String?
  financialNeed      String?
  
  // Achievements and Experience
  achievements       String?
  extracurricular    String?
  workExperience     String?
  researchExperience String?
  publications       String?
  awards             String?
  references         String?
  
  // Motivation and Goals
  motivation         String?
  futureGoals        String?
  additionalInfo     String?

  scholarship Scholarship @relation(fields: [scholarshipId], references: [id], onDelete: Cascade)

  @@map("applications")
}

model Notification {
  id        String           @id @default(cuid())
  userId    String
  message   String
  type      NotificationType
  read      Boolean          @default(false)
  createdAt DateTime         @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("notifications")
}

model MarketingSignup {
  id        String   @id @default(cuid())
  email     String   @unique
  phone     String?
  createdAt DateTime @default(now())

  @@map("marketing_signups")
}

model Resource {
  id          String       @id @default(cuid())
  title       String
  fileUrl     String
  type        ResourceType
  category    Category
  description String?
  adminId     String
  createdAt   DateTime     @default(now())

  admin User @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@map("resources")
}

// NextAuth required models
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

enum UserRole {
  STUDENT
  ADMIN
  SUPER_ADMIN
}

enum AmountType {
  FULL
  PARTIAL
  CUSTOM
}

enum Category {
  COMPUTER_SCIENCE
  ENGINEERING
  MEDICINE
  BUSINESS
  ARTS
  SOCIAL_SCIENCES
  NATURAL_SCIENCES
  MATHEMATICS
  LAW
  EDUCATION
  OTHER
}

enum DegreeLevel {
  BACHELOR
  MASTER
  PHD
  CERTIFICATE
  DIPLOMA
}

enum ScholarshipStatus {
  ACTIVE
  DRAFT
  EXPIRED
  PAUSED
}

enum ApprovalStatus {
  PENDING
  APPROVED
  REJECTED
}

enum ApplicationStatus {
  APPLIED
  UNDER_REVIEW
  ACCEPTED
  REJECTED
  WAITLISTED
}

enum NotificationType {
  DEADLINE_REMINDER
  NEW_SCHOLARSHIP
  APPLICATION_UPDATE
  SYSTEM
}

enum ResourceType {
  GUIDE
  ESSAY_EXAMPLE
  APPLICATION_TIP
  OTHER
}
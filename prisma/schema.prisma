generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String             @id @default(cuid())
  email                   String             @unique
  name                    String?
  password                String?
  role                    UserRole           @default(STUDENT)
  approved                Boolean            @default(false)
  profileComplete         Boolean            @default(false)
  preferences             Json?
  createdAt               DateTime           @default(now())
  updatedAt               DateTime           @updatedAt
  emailVerified           DateTime?
  degreeLevel             String?
  fieldOfStudy            String?
  notificationPreferences Json?
  accounts                Account[]
  notifications           Notification[]
  resources               Resource[]
  savedScholarships       SavedScholarship[]
  scholarships            Scholarship[]
  sessions                Session[]

  @@map("users")
}

model Scholarship {
  id                  String             @id @default(cuid())
  title               String
  description         String
  detailedDescription String?
  logoUrl             String?
  referenceUrl        String?
  eligibilityCriteria String?
  applicationProcess  String?
  qualificationBasis  String?
  awardsAvailable     Int?
  amount              String
  amountType          AmountType         @default(PARTIAL)
  deadline            DateTime
  contactInfo         String?
  status              ScholarshipStatus  @default(ACTIVE)
  approvalStatus      ApprovalStatus     @default(PENDING)
  views               Int                @default(0)
  adminId             String
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  categories          String[]
  degreeLevels        String[]
  applications        Application[]
  savedBy             SavedScholarship[]
  admin               User               @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@map("scholarships")
}

model SavedScholarship {
  id            String      @id @default(cuid())
  userId        String
  scholarshipId String
  savedAt       DateTime    @default(now())
  scholarship   Scholarship @relation(fields: [scholarshipId], references: [id], onDelete: Cascade)
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, scholarshipId])
  @@map("saved_scholarships")
}

model Application {
  id                 String            @id @default(cuid())
  scholarshipId      String
  appliedAt          DateTime          @default(now())
  status             ApplicationStatus @default(APPLIED)
  achievements       String?
  additionalInfo     String?
  awards             String?
  currentInstitution String?
  currentYear        String?
  dateOfBirth        DateTime?
  email              String
  expectedGraduation DateTime?
  extracurricular    String?
  fieldOfStudy       String?
  financialNeed      String?
  futureGoals        String?
  gpa                Float?
  intendedCountry    String?
  intendedProgram    String?
  intendedUniversity String?
  message            String?
  motivation         String?
  name               String
  nationality        String?
  phone              String?
  publications       String?
  references         String?
  researchExperience String?
  workExperience     String?
  scholarship        Scholarship       @relation(fields: [scholarshipId], references: [id], onDelete: Cascade)

  @@map("applications")
}

model Notification {
  id        String           @id @default(cuid())
  userId    String
  message   String
  type      NotificationType
  read      Boolean          @default(false)
  createdAt DateTime         @default(now())
  user      User             @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("notifications")
}

model MarketingSignup {
  id        String   @id @default(cuid())
  email     String   @unique
  phone     String?
  createdAt DateTime @default(now())

  @@map("marketing_signups")
}

model Resource {
  id          String       @id @default(cuid())
  title       String
  fileUrl     String
  type        ResourceType
  category    Category
  description String?
  adminId     String
  createdAt   DateTime     @default(now())
  admin       User         @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@map("resources")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

enum UserRole {
  STUDENT
  ADMIN
  SUPER_ADMIN
}

enum AmountType {
  FULL
  PARTIAL
  CUSTOM
}

enum Category {
  COMPUTER_SCIENCE
  ENGINEERING
  MEDICINE
  BUSINESS
  ARTS
  SOCIAL_SCIENCES
  NATURAL_SCIENCES
  MATHEMATICS
  LAW
  EDUCATION
  OTHER
}

enum DegreeLevel {
  BACHELOR
  MASTER
  PHD
  CERTIFICATE
  DIPLOMA
}

enum ScholarshipStatus {
  ACTIVE
  DRAFT
  EXPIRED
  PAUSED
}

enum ApprovalStatus {
  PENDING
  APPROVED
  REJECTED
}

enum ApplicationStatus {
  APPLIED
  UNDER_REVIEW
  ACCEPTED
  REJECTED
  WAITLISTED
}

enum NotificationType {
  DEADLINE_REMINDER
  NEW_SCHOLARSHIP
  APPLICATION_UPDATE
  SYSTEM
}

enum ResourceType {
  GUIDE
  ESSAY_EXAMPLE
  APPLICATION_TIP
  OTHER
  SCHOLARSHIP_CALENDAR
  DEADLINE_TRACKER
  APPLICATION_CHECKLIST
  CV_RESUME_TEMPLATE
  PERSONAL_STATEMENT_GUIDE
  RECOMMENDATION_LETTER_TEMPLATE
  FINANCIAL_AID_GUIDE
  STUDY_ABROAD_GUIDE
  VISA_INFORMATION
  UNIVERSITY_RANKINGS
  COURSE_CATALOG
  ADMISSION_REQUIREMENTS
  TEST_PREPARATION
  INTERVIEW_GUIDE
  PORTFOLIO_GUIDE
  RESEARCH_PROPOSAL_TEMPLATE
  GRANT_WRITING_GUIDE
  FELLOWSHIP_GUIDE
  INTERNSHIP_GUIDE
  CAREER_PLANNING
  NETWORKING_GUIDE
  MENTORSHIP_PROGRAM
  WORKSHOP_MATERIALS
  WEBINAR_RECORDINGS
  CASE_STUDIES
  SUCCESS_STORIES
  FAQ_DOCUMENT
  POLICY_DOCUMENT
  PROCEDURE_MANUAL
  REFERENCE_MATERIAL
}
